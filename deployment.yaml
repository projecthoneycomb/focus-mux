apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mux-claim0
  name: mux-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: focus-mux
  labels:
    app: focus-mux
spec:
  replicas: 1
  selector:
    matchLabels:
      app: focus-mux
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app: focus-mux
    spec:
      containers:
        - name: focus-mux
          image: focusmodeimages.azurecr.io/mux:latest
          env:
            - name: HTTP_PORT
              value: "8000"
            - name: RTMP_INGEST_PORT
              value: "1935"
          ports:
            - containerPort: 8000
              name: mux-external
            - containerPort: 1935
              name: mux-ingest
          volumeMounts:
            - mountPath: /app
              name: mux-claim0
      volumes:
        - name: mux-claim0
          persistentVolumeClaim:
            claimName: mux-claim0
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: focus-mux
spec:
  type: LoadBalancer
  ports:
    - name: mux-ext
      port: 80
      targetPort: mux-external
    - name: mux-int
      port: 1935
      targetPort: mux-ingest
  selector:
    app: focus-mux
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: focus-mux
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: focus-mux.f6c3d55f36bd46c893dc.uksouth.aksapp.io
    http:
      paths:
      - backend:
          serviceName: focus-mux
          servicePort: 80
        path: /